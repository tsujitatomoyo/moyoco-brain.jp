
/* ---- header ---- */


.content {
  overflow: hidden; /* はみ出た部分は表示しない */
}

.content01{
  position: relative;
  width: 100%;
  background-color: $main-color;
	&.__normal{
		padding: 1rem 1rem 7rem;
	}
	&.__header{
		position: relative;
		height: 140px;
		padding: 1rem;
		z-index: 2;
	}
}

.content02{
  position: relative;
  width: 100%;
  background-color: $base-color;
	&.__normal{
		padding: 1rem 0 1rem;
	}
	&.__header{
		height: 140px;
		padding: 1rem;
	}
}


.content01::after {
  content: '';
  display: block;
  position: absolute;
  right:0;
  bottom: 0;
  border-top: 40px solid transparent;    
  border-right: 50vw solid transparent;    
  border-left: 50vw solid $base-color;   
  border-bottom: 60px solid $base-color;  
}
@media only screen and (max-width: 2000px) {
  .content01::after {
    border-right: 1000px solid transparent;    
    border-left: 1000px solid $base-color;   
  }
}


.content02::after {
  content: '';
  display: block;
  position: absolute;
  right:0;
  bottom: 0;
  border-top: 40px solid transparent;    
  border-right: 50vw solid transparent;    
  border-left: 50vw solid $main-color;   
  border-bottom: 60px solid $main-color;  
}
@media only screen and (max-width: 2000px) {
  .content02::after {
    border-right: 1000px solid transparent;    
    border-left: 1000px solid $main-color;   
  }
}


.bg__main{
	background-color: $main-color;
}
.bg__base{
	background-color: $base-color;
}

.bg__point{
	background-color: $point-color;
}

.header_ttl{
	width: 400px;
	font-size: 0.8rem;
	color: #FFF;
	position: absolute;
	left: 0;
}

.header_pc_menu{
	width: 530px;
	font-weight: bold;
	position: absolute;
	right: 0;
	top:0;
	padding: 0 1rem 0 0;
	z-index: 10;
}


/* ---- header navi ---- */

/*アクティブになったエリア*/
#g-nav.panelactive{
    /*position:fixed;にし、z-indexの数値を大きくして前面へ*/
    position:fixed;
    z-index: 999;
  top: 0;
  width:100%;
    height: 100vh;
}

/*丸の拡大*/
.circle-bg{
    position: fixed;
  z-index:3;
    /*丸の形*/
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: #999;
    /*丸のスタート位置と形状*/
  transform: scale(0);/*scaleをはじめは0に*/
  right:-50px;
    top:-50px;
    transition: all .6s;/*0.6秒かけてアニメーション*/
}

.circle-bg.circleactive{
  transform: scale(50);/*クラスが付与されたらscaleを拡大*/
}

/*ナビゲーションの縦スクロール*/
#g-nav-list{
    display: none;/*はじめは表示なし*/
    /*ナビの数が増えた場合縦スクロール*/
    position: fixed;
    z-index: 999; 
    width: 100%;
    height: 100vh;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

#g-nav.panelactive #g-nav-list{
     display: block; /*クラスが付与されたら出現*/
}

/*ナビゲーション*/
#g-nav ul {
  opacity: 0;/*はじめは透過0*/
    /*ナビゲーション天地中央揃え※レイアウトによって調整してください。不必要なら削除*/
    position: absolute;
    z-index: 999;
    top:50%;
    left:50%;
    transform: translate(-50%,-50%);
}

/*背景が出現後にナビゲーションを表示*/
#g-nav.panelactive ul {
    opacity:1;
}

/* 背景が出現後にナビゲーション li を表示※レイアウトによって調整してください。不必要なら削除*/
#g-nav.panelactive ul li{
animation-name:gnaviAnime;
animation-duration:1s;
animation-delay:.2s;/*0.2 秒遅らせて出現*/
animation-fill-mode:forwards;
opacity:0;
}
@keyframes gnaviAnime{
0% {
opacity: 0;
}
100% {
opacity: 1;
}
}


/*リストのレイアウト設定*/
#g-nav li{
  text-align: center; 
  list-style: none;
}

#g-nav li a{
  color: #333;
  text-decoration: none;
  padding:10px;
  display: block;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-weight: bold;
}


/*========= ボタンのためのCSS ===============*/
.openbtn1{
  position:fixed;
  top:10px;
  right: 10px;
  z-index: 9999;/*ボタンを最前面に*/
  cursor: pointer;
    width: 50px;
    height:50px;
}
  
/*×に変化*/  
.openbtn1 span{
    display: inline-block;
    transition: all .4s;
    position: absolute;
    left: 14px;
    height: 3px;
    border-radius: 2px;
  background-color: #666;
    width: 45%;
  }

.openbtn1 span:nth-of-type(1) {
  top:15px; 
}

.openbtn1 span:nth-of-type(2) {
  top:23px;
}

.openbtn1 span:nth-of-type(3) {
  top:31px;
}

.openbtn1.active span:nth-of-type(1) {
    top: 18px;
    left: 18px;
    transform: translateY(6px) rotate(-45deg);
    width: 30%;
}

.openbtn1.active span:nth-of-type(2) {
  opacity: 0;
}

.openbtn1.active span:nth-of-type(3){
    top: 30px;
    left: 18px;
    transform: translateY(-6px) rotate(45deg);
    width: 30%;
}

/*========= レイアウトのためのCSS ===============*/

h1{
  font-size:1.2rem;
}

h2{
  font-size:1.2rem;
  text-align: center;
  margin: 0 0 30px 0;
}

p{
  margin-top:20px;  
}

small{
  color:#fff;
  display: block;
  text-align: center;
}

#header{
  width:100%;
  background:#333;
  color:#fff;
  text-align: center;
  padding: 20px;
}

section{
  padding:100px 30px;
}

section:nth-child(2n){
  //background:#f3f3f3; 
}




/* ---- top ---- */
.top_main_img{
	margin: 3rem auto;
	width: 15rem;
	background-image: url(#{$img_path}/common/brain.svg);
	background-repeat: no-repeat;
	position: relative;
	z-index: 50;
	padding: 7rem;
	background-size: contain;
	background-position: center;
	img{
		margin: auto;
		position: relative;
		z-index: 90;
		top:2rem;
		
	}
}

.top

.top_bg_circle{
	position: absolute;
	transform: rotate(6deg);
	top: 120px;
}


.top_main_bg_margin{
	background-color: #FFFCEC;
    position: absolute;
    top: 10%;
	margin: 2rem;

}

.top_wave {
  position: relative;
	width: 100%;
}

.top_wave canvas {
  position: absolute;
  /*bottom: 0;*/
  left: 0;
	top:1.5rem;
	width: 100%;
	height: 90px;
}

.top_ttl_txt--wrap{
	position: absolute;
    top: -2rem;
    left: -15rem;
	
}

.top_ttl_txt_letter-spacing{
	letter-spacing:8px;
	font-size: 16px;
	
	&.__box1{
	span{
			    margin-bottom: -0.8px;
    margin-left: 6px;
		}

	}
	&.__box2{
	span{
			margin-bottom: -4px;
    margin-top: 6px;
		}

	}
	&.__box3{
    span{
			margin-right: -2px;
		    margin-left: 6px;
		}

	}
}

.top_ttl_txt{
	//background-color: aqua;
	margin: 0;
	overflow: hidden;
	p{
		margin: 0;
	}
	
	&.__box1{
		position: absolute;
    top: -68px;
    left: 142px;
	}
	&.__box2{
	position: absolute;
    top: -44px;
    left: 142px;
    text-orientation: upright;

	}
	&.__box3{
    position: absolute;
    top: 54px;
    left: 0;

	}
}



/*========= 縦書き ===============*/
.text_tate{
	writing-mode: vertical-rl;
}






/*========= レイアウトのためのCSS ===============*/



.box{
    //color: #fff;
    //padding: 40px;
	display:flex;
	justify-content: center;
	align-items: center;
	text-align: center;
	position: relative;
}
#box1{
    background: linear-gradient(0deg, rgba(235,89,60,1) 0%, rgba(235,89,60,1) 50%, rgba(255,252,236,1) 50%, rgba(255,252,236,1) 100%);
}
#box2{
    background: #666;
}
#box3{
    background: #666;
}
#box4{
    background: #000;
}

#footer{
	background:#333;
	color:#fff;
	//padding:40px;
	text-align:center;
}

#footer a{
	color: #fff;
}







.bgextend{
  animation-name:bgextendAnimeBase;
  animation-duration:1s;
  animation-fill-mode:forwards;
  position: relative;
  overflow: hidden;/*　はみ出た色要素を隠す　*/
  opacity:0;
}

@keyframes bgextendAnimeBase{
  from {
    opacity:0;
  }

  to {
    opacity:1;  
}
}

/*中の要素*/
.bgappear{
  animation-name:bgextendAnimeSecond;
  animation-duration:1s;
  animation-delay: 0.6s;
  animation-fill-mode:forwards;
  opacity: 0;
}

@keyframes bgextendAnimeSecond{
  0% {
  opacity: 0;
  }
  100% {
  opacity: 1;
}
}

/*左から右*/
.bgLRextend::before{
  animation-name:bgLRextendAnime;
  animation-duration:1s;
  animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: $point-color;/*伸びる背景色の設定*/
	z-index: 10;
}
.bgLRextend::after{
  animation-name:bgLRextendAnime_after;
  animation-duration:1s;
  animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: $main-color;/*伸びる背景色の設定*/
	left: 0;
	top: 0;
	//opacity:0;
	//z-index: 1;
}
@keyframes bgLRextendAnime{
  0% {
    transform-origin:left;
    transform:scaleX(0);
  }
  50% {
    transform-origin:left;
    transform:scaleX(1);
  }
  50.001% {
    transform-origin:right;
  }
  100% {
    transform-origin:right;
    transform:scaleX(0);
  }
}

@keyframes bgLRextendAnime_after{
  0% {
    transform-origin:left;
    transform:scaleX(0);
  }
  50% {
    transform-origin:left;
    transform:scaleX(1);
  }
}



/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.bgappearTrigger_1,.bgappearTrigger_2,.bgappearTrigger_3,.bgLRextendTrigger{
    opacity: 0;
	position: inherit;
	z-index: 5;
}